{"version":3,"sources":["AllPets.js","New.js","Edit.js","OnePet.js","App.js","serviceWorker.js","index.js"],"names":["AllPets","props","state","pets","axios","get","then","res","setState","data","catch","err","console","log","this","border","map","s","key","_id","petname","pettype","to","Component","New","addPet","e","preventDefault","post","newPet","errors","history","push","changeName","target","value","changeType","changeDescription","description","onSubmit","type","placeholder","onChange","message","Edit","changepetname","pet","changepettype","changedescription","updatePet","match","params","put","OnePet","delete","componentDidMount","window","location","reload","Increase","like","localStorage","setItem","document","getElementById","disabled","onClick","bind","id","App","className","exact","path","component","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+SAsDeA,E,YA5CX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,KAAM,IAHI,E,iFAOE,IAAD,OACfC,IAAMC,IAAI,kCACLC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAACL,KAAMI,EAAIE,UACrCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC1BC,QAAQC,IAAIC,KAAKZ,S,+BAKzB,OACE,2BAAOa,OAAO,KACZ,+BACE,4BACE,oCACA,oCACA,wCAGAD,KAAKZ,MAAMC,KAAKa,KAAI,SAAAC,GAAC,OACnB,wBAAIC,IAAKD,EAAEE,KACT,4BAAKF,EAAEG,SACP,4BAAKH,EAAEI,SACP,4BAEE,kBAAC,IAAD,CAAMC,GAAI,SAAWL,EAAEE,KAAvB,WAFF,YAIE,kBAAC,IAAD,CAAMG,GAAI,cAAgBL,EAAEE,KAA5B,mB,GAlCII,a,qkBCgGPC,E,YAnGb,WAAYvB,GAAQ,IAAD,8BACjB,4CAAMA,KAeRwB,OAAS,SAAAC,GACPA,EAAEC,iBACFvB,IAAMwB,KAAK,iCAAkC,EAAK1B,MAAM2B,QACrDvB,MAAK,SAAAC,GACJK,QAAQC,IAAIN,GACTA,EAAIE,KAAKqB,OACV,EAAKtB,SAAS,CAACsB,OAAQvB,EAAIE,KAAKqB,SAEhC,EAAK7B,MAAM8B,QAAQC,KAAK,YAG3BtB,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OA5BC,EAgCnBsB,WAAa,SAAAP,GACX,IAAIG,EAAM,KAAO,EAAK3B,MAAM2B,QAC5BA,EAAOT,QAAUM,EAAEQ,OAAOC,MAC1B,EAAK3B,SAAS,CAACqB,OAAQA,KAnCN,EAsCnBO,WAAa,SAAAV,GACX,IAAIG,EAAM,KAAO,EAAK3B,MAAM2B,QAC5BA,EAAOR,QAAUK,EAAEQ,OAAOC,MAC1B,EAAK3B,SAAS,CAACqB,OAAQA,KAzCN,EA4CnBQ,kBAAoB,SAAAX,GAClB,IAAIG,EAAM,KAAO,EAAK3B,MAAM2B,QAC5BA,EAAOS,YAAcZ,EAAEQ,OAAOC,MAC9B,EAAK3B,SAAS,CAACqB,OAAQA,KA7CvB,EAAK3B,MAAQ,CACX2B,OAAQ,CACNT,QAAS,GACTC,QAAS,GACTiB,YAAa,IAEfR,OAAQ,CACNV,QAAS,GACTC,QAAS,GACTiB,YAAa,KAXA,E,sEAmDjB,OACA,oCACI,+CAEF,0BAAMC,SAAUzB,KAAKW,QACnB,2BACEe,KAAK,OACLC,YAAY,OACZC,SAAU5B,KAAKmB,WACfE,MAAOrB,KAAKZ,MAAM2B,OAAOT,UAGzBN,KAAKZ,MAAM4B,OAAOV,QAClB,8BAAON,KAAKZ,MAAM4B,OAAOV,QAAQuB,SACjC,GAEF,6BACA,2BACEH,KAAK,OACLC,YAAY,OACZC,SAAU5B,KAAKsB,WACfD,MAAOrB,KAAKZ,MAAM2B,OAAOR,UAGzBP,KAAKZ,MAAM4B,OAAOT,QAClB,8BAAOP,KAAKZ,MAAM4B,OAAOT,QAAQsB,SACjC,GAEF,6BACA,2BACEH,KAAK,OACLC,YAAY,cACZC,SAAU5B,KAAKuB,kBACfF,MAAOrB,KAAKZ,MAAM2B,OAAOS,cAGzBxB,KAAKZ,MAAM4B,OAAOQ,YAClB,8BAAOxB,KAAKZ,MAAM4B,OAAOQ,YAAYK,SACrC,GAEF,6BACA,2BAAOH,KAAK,iB,GA9FFjB,a,6jBC6GHqB,E,YA7Gb,WAAY3C,GAAQ,IAAD,8BACjB,4CAAMA,KA0BR4C,cAAgB,SAAAnB,GACd,IAAIoB,EAAG,KAAO,EAAK5C,MAAM4C,KACzBA,EAAI1B,QAAUM,EAAEQ,OAAOC,MACvB,EAAK3B,SAAS,CAACsC,IAAKA,KA9BH,EAiCnBC,cAAgB,SAAArB,GACd,IAAIoB,EAAG,KAAO,EAAK5C,MAAM4C,KACzBA,EAAIzB,QAAUK,EAAEQ,OAAOC,MACvB,EAAK3B,SAAS,CAACsC,IAAKA,KApCH,EAuCnBE,kBAAoB,SAAAtB,GAClB,IAAIoB,EAAG,KAAO,EAAK5C,MAAM4C,KACzBA,EAAIR,YAAcZ,EAAEQ,OAAOC,MAC3B,EAAK3B,SAAS,CAACsC,IAAKA,KA1CH,EA6CnBG,UAAY,SAAAvB,GACVA,EAAEC,iBACF,IAAIR,EAAM,EAAKlB,MAAMiD,MAAMC,OAAOhC,IAClCf,IAAMgD,IAAN,yCAA4CjC,GAAO,EAAKjB,MAAM4C,KAC3DxC,MAAK,SAAAC,GACDA,EAAIE,KAAKqB,OACV,EAAKtB,SAAS,CAACsB,OAAQvB,EAAIE,KAAKqB,SAEhC,EAAK7B,MAAM8B,QAAQC,KAAK,YAG3BtB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAtD5B,EAAKT,MAAQ,CACX4C,IAAK,CACH1B,QAAS,GACTC,QAAS,GACTiB,YAAa,IAEfR,OAAQ,CACNV,QAAS,GACTC,QAAS,GACTiB,YAAa,KAXA,E,iFAgBE,IAAD,OACdnB,EAAML,KAAKb,MAAMiD,MAAMC,OAAOhC,IAClCf,IAAMC,IAAN,yCAA4Cc,IACzCb,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAACsC,IAAKvC,EAAIE,UAEzBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC1BC,QAAQC,IAAIC,KAAKZ,MAAM4C,IAAI1B,W,+BAsC7B,OACI,oCACA,oDACA,6BACF,0BAAMmB,SAAUzB,KAAKmC,WACnB,2BACET,KAAK,OACLC,YAAY,OACZC,SAAU5B,KAAK+B,cACfV,MAAOrB,KAAKZ,MAAM4C,IAAI1B,UAGtBN,KAAKZ,MAAM4B,OAAOV,QAClB,8BAAON,KAAKZ,MAAM4B,OAAOV,QAAQuB,SACjC,GAEF,6BACA,2BACEH,KAAK,OACLC,YAAY,OACZC,SAAU5B,KAAKiC,cACfZ,MAAOrB,KAAKZ,MAAM4C,IAAIzB,UAGtBP,KAAKZ,MAAM4B,OAAOT,QAClB,8BAAOP,KAAKZ,MAAM4B,OAAOT,QAAQsB,SACjC,GAEF,6BACA,2BACEH,KAAK,OACLC,YAAY,cACZC,SAAU5B,KAAKkC,kBACfb,MAAOrB,KAAKZ,MAAM4C,IAAIR,cAGtBxB,KAAKZ,MAAM4B,OAAOQ,YAClB,8BAAOxB,KAAKZ,MAAM4B,OAAOQ,YAAYK,SACrC,GAEF,6BACA,2BAAOH,KAAK,iB,GAvGDjB,a,6jBC4DJ8B,E,YAxDX,WAAYpD,GAAO,IAAD,8BACd,4CAAMA,KAcVqD,OAAS,SAACnC,EAAKO,GACXA,EAAEC,iBACFvB,IAAMkD,OAAN,yCAA+CnC,IAC5Cb,MAAK,SAAAC,GAAG,OAAI,EAAKgD,uBACjB7C,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC5B,EAAKV,MAAM8B,QAAQC,KAAK,SACxBwB,OAAOC,SAASC,UArBF,EAwBlBC,SAAW,WAEP,IAAIxC,EAAM,EAAKlB,MAAMiD,MAAMC,OAAOhC,IAClCf,IAAMgD,IAAN,yCAA4CjC,GAAQ,CAACyC,KAAK,EAAK1D,MAAM4C,IAAIc,KAAO,IAC7EtD,MAAK,SAAAC,GACJK,QAAQC,IAAIN,GACZ,EAAKC,SAAS,CAACsC,IAAI,KAAK,EAAK5C,MAAM4C,IAAjB,CAAsBc,KAAM,EAAK1D,MAAM4C,IAAIc,KAAO,IAAMA,MAAK,IAC/EC,aAAaC,QAAQ,QAAQ,EAAK5D,MAAM4C,IAAI3B,KAC5C4C,SAASC,eAAe,SAASC,UAAS,EAC1C,EAAKhE,MAAM8B,QAAQC,KAAnB,gBAAiCb,OAElCT,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAjC5B,EAAKT,MAAQ,CACT4C,IAAK,IAHK,E,iFAOE,IAAD,OACX3B,EAAML,KAAKb,MAAMiD,MAAMC,OAAOhC,IAClCf,IAAMC,IAAN,yCAA4Cc,IACvCb,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAACsC,IAAKvC,EAAIE,UACpCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC1BC,QAAQC,IAAIC,KAAKZ,S,+BA4BzB,OACI,oCACI,kDAAwBY,KAAKZ,MAAM4C,IAAI1B,SACvC,0CAAgBN,KAAKZ,MAAM4C,IAAIzB,SAC/B,4CAAkBP,KAAKZ,MAAM4C,IAAIR,aACjC,qCAAWxB,KAAKZ,MAAM4C,IAAIc,MAC1B,4BAAQM,QACJpD,KAAKwC,OAAOa,KAAKrD,KAAMA,KAAKZ,MAAM4C,IAAI3B,MAD1C,SAIA,4BAAQiD,GAAG,QAAQF,QAASpD,KAAK6C,UAAjC,a,GAnDSpC,a,QC+BN8C,E,iLApBX,OACE,kBAAC,IAAD,KACA,yBAAKC,UAAU,aACb,2CAEF,kBAAC,IAAD,CAAMhD,GAAG,SAAT,QAHA,OAKA,kBAAC,IAAD,CAAMA,GAAG,QAAT,YAEA,kBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,QAAQC,UAAazE,IACvC,kBAAC,IAAD,CAAOwE,KAAK,OAAOC,UAAajD,IAChC,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,aAAaC,UAAapB,IAC5C,kBAAC,IAAD,CAAOmB,KAAK,kBAAkBC,UAAa7B,IAC3C,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,IAAIC,UAAazE,S,GAfvBuB,aCHEmD,QACW,cAA7BlB,OAAOC,SAASkB,UAEe,UAA7BnB,OAAOC,SAASkB,UAEhBnB,OAAOC,SAASkB,SAASzB,MACvB,2DCZN0B,IAASC,OAAO,kBAAC,EAAD,MAASd,SAASC,eAAe,SD2H3C,kBAAmBc,WACrBA,UAAUC,cAAcC,MAAM1E,MAAK,SAAA2E,GACjCA,EAAaC,kB","file":"static/js/main.9aaebf7c.chunk.js","sourcesContent":["  \r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Link\r\n  } from 'react-router-dom';\r\n\r\nclass AllPets extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pets: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:8000/api/pets\")\r\n            .then(res => this.setState({pets: res.data}))\r\n            .catch(err => console.log(err));\r\n            console.log(this.state)  \r\n    }\r\n\r\n\r\nrender() {\r\n    return (\r\n      <table border=\"1\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n          {\r\n            this.state.pets.map(s =>\r\n              <tr key={s._id}>\r\n                <td>{s.petname}</td>\r\n                <td>{s.pettype}</td>\r\n                <td>\r\n                  \r\n                  <Link to={\"/pets/\" + s._id}>Details</Link>\r\n                  &nbsp;|&nbsp;\r\n                  <Link to={\"/pets/edit/\" + s._id} >edit</Link>\r\n                </td>\r\n              </tr>  \r\n            )\r\n          }\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllPets;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass New extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newPet: {\r\n        petname: \"\",\r\n        pettype: \"\",\r\n        description: \"\"\r\n      }, \r\n      errors: {\r\n        petname: \"\",\r\n        pettype: \"\",\r\n        description: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  addPet = e => {\r\n    e.preventDefault();\r\n    axios.post(\"http://localhost:8000/api/pets\", this.state.newPet)\r\n      .then(res => {\r\n        console.log(res);\r\n        if(res.data.errors) {\r\n          this.setState({errors: res.data.errors});\r\n        } else {\r\n          this.props.history.push(\"/pets\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  changeName = e => {\r\n    let newPet = {...this.state.newPet};\r\n    newPet.petname = e.target.value;\r\n    this.setState({newPet: newPet});\r\n  }\r\n\r\n  changeType = e => {\r\n    let newPet = {...this.state.newPet};\r\n    newPet.pettype = e.target.value;\r\n    this.setState({newPet: newPet});\r\n  }\r\n\r\n  changeDescription = e => {\r\n    let newPet = {...this.state.newPet};\r\n    newPet.description = e.target.value;\r\n    this.setState({newPet: newPet});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <>\r\n        <h1> Register a Pet</h1>\r\n        \r\n      <form onSubmit={this.addPet}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Name\" \r\n          onChange={this.changeName} \r\n          value={this.state.newPet.petname} \r\n        />\r\n        {\r\n          this.state.errors.petname ?\r\n          <span>{this.state.errors.petname.message}</span> :\r\n          \"\"\r\n        }\r\n        <br/>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Type\" \r\n          onChange={this.changeType} \r\n          value={this.state.newPet.pettype}\r\n        />\r\n        {\r\n          this.state.errors.pettype ?\r\n          <span>{this.state.errors.pettype.message}</span> :\r\n          \"\"\r\n        }\r\n        <br/>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"description\" \r\n          onChange={this.changeDescription} \r\n          value={this.state.newPet.description}\r\n        />\r\n        {\r\n          this.state.errors.description ?\r\n          <span>{this.state.errors.description.message}</span> :\r\n          \"\"\r\n        }\r\n        <br/>\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default New;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pet: {\r\n        petname: \"\",\r\n        pettype: \"\",\r\n        description: \"\"\r\n      }, \r\n      errors: {\r\n        petname: \"\",\r\n        pettype: \"\",\r\n        description: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let _id = this.props.match.params._id;\r\n    axios.get(`http://localhost:8000/api/pets/${_id}`)\r\n      .then(res => {\r\n        this.setState({pet: res.data});\r\n      })\r\n      .catch(err => console.log(err));\r\n      console.log(this.state.pet.petname)\r\n      \r\n  }\r\n\r\n  changepetname = e => {\r\n    let pet = {...this.state.pet};\r\n    pet.petname = e.target.value;\r\n    this.setState({pet: pet});\r\n  }\r\n\r\n  changepettype = e => {\r\n    let pet = {...this.state.pet};\r\n    pet.pettype = e.target.value;\r\n    this.setState({pet: pet});\r\n  }\r\n\r\n  changedescription = e => {\r\n    let pet = {...this.state.pet};\r\n    pet.description = e.target.value;\r\n    this.setState({pet: pet});\r\n  }\r\n\r\n  updatePet = e => {\r\n    e.preventDefault();\r\n    let _id = this.props.match.params._id;\r\n    axios.put(`http://localhost:8000/api/pets/${_id}`, this.state.pet)\r\n      .then(res => {\r\n        if(res.data.errors) {\r\n          this.setState({errors: res.data.errors});\r\n        } else {\r\n          this.props.history.push(\"/pets\")\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n        <h1>Edit Pet Information</h1>\r\n        <br></br>\r\n      <form onSubmit={this.updatePet}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Name\" \r\n          onChange={this.changepetname} \r\n          value={this.state.pet.petname} \r\n        />\r\n        {\r\n          this.state.errors.petname ?\r\n          <span>{this.state.errors.petname.message}</span> :\r\n          \"\"\r\n        }\r\n        <br/>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Type\" \r\n          onChange={this.changepettype} \r\n          value={this.state.pet.pettype}\r\n        />\r\n        {\r\n          this.state.errors.pettype ?\r\n          <span>{this.state.errors.pettype.message}</span> :\r\n          \"\"\r\n        }\r\n        <br/>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Description\" \r\n          onChange={this.changedescription} \r\n          value={this.state.pet.description}\r\n        />\r\n        {\r\n          this.state.errors.description ?\r\n          <span>{this.state.errors.description.message}</span> :\r\n          \"\"\r\n        }\r\n        <br/>\r\n        <input type=\"submit\" />\r\n      </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass OnePet extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pet: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let _id = this.props.match.params._id;\r\n        axios.get(`http://localhost:8000/api/pets/${_id}`)\r\n            .then(res => this.setState({pet: res.data}))\r\n            .catch(err => console.log(err));\r\n            console.log(this.state)  \r\n    }\r\n\r\n    delete = (_id, e) => {\r\n        e.preventDefault();\r\n        axios.delete(`http://localhost:8000/api/pets/${_id}`)\r\n          .then(res => this.componentDidMount())\r\n          .catch(err => console.log(err));\r\n        this.props.history.push(\"/pets\");\r\n        window.location.reload();\r\n          \r\n      }\r\n    Increase = () => {\r\n\r\n        let _id = this.props.match.params._id;\r\n        axios.put(`http://localhost:8000/api/pets/${_id}` , {like:this.state.pet.like + 1 })\r\n          .then(res => {\r\n            console.log(res);\r\n            this.setState({pet: {...this.state.pet, like: this.state.pet.like + 1 } , like:true});\r\n            localStorage.setItem(\"likes\",this.state.pet._id);\r\n            document.getElementById(\"Liker\").disabled=true;\r\n            this.props.history.push(`/pets/${_id}`);\r\n          })\r\n          .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n            <h1>Information about  {this.state.pet.petname}</h1> \r\n            <h2>Pet Type:  {this.state.pet.pettype}</h2>\r\n            <p>Description:  {this.state.pet.description}</p> \r\n            <p>Likes: {this.state.pet.like}</p>\r\n            <button onClick={\r\n                this.delete.bind(this, this.state.pet._id)}>\r\n                    Adopt\r\n            </button>\r\n            <button id=\"Liker\" onClick={this.Increase}>Like</button>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OnePet;","  \nimport React, { Component } from 'react';\nimport './App.css';\nimport AllPets from './AllPets';\nimport New from './New';\nimport Edit from './Edit';\nimport OnePet from './OnePet';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter,\n  Route,\n  Link\n} from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"jumbotron\">\n        <h1>Pet Shelter</h1>\n      \n      <Link to=\"/pets\">Home</Link>\n      &nbsp;\n      <Link to=\"/new\">Add Pet</Link>\n      </div>\n      <Route exact path=\"/pets\" component = {AllPets}/>\n      <Route path=\"/new\" component = {New}/>\n      <Route exact path=\"/pets/:_id\" component = {OnePet}/>\n      <Route path=\"/pets/edit/:_id\" component = {Edit}/>\n      <Route exact path=\"/\" component = {AllPets}/>\n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}